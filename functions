#!/bin/bash
#set -x

testCSV () {
	if !  test -f $CSV ; then
		echo "ERROR: File not found: $CSV"
		exit 1
	fi

}

getAccounts () {
	curl -s -X GET "https://api.youneedabudget.com/v1/budgets/$budgetId/accounts" -H  "accept: application/json" -H  "Authorization: Bearer $ynabToken" | jq '.data.accounts[]'|jq . -c --slurp
}

getAccountIdFromIBAN () {
	IBAN=$1
	cat $temp/accounts.json | jq '.[]|select(.name | contains("'$IBAN'"))|.id'
}

converterUsage() {
	echo "converter.sh [lhv|swedbank] input.csv"
}

importUsage () {
	echo "importer.sh [lhv|swedbank] input.csv"
}




swedbankConvert () {
	IBAN=$( csvcut -c 1 -d";" $CSV | head -n 2|tail -n1 )
	prefix=$( getAccounts | jq '.[]|select(.name | contains("'$IBAN'"))|.name' -r|tr " " "_" )
	filename="${prefix}_$(date "+%Y-%m-%d_%H-%M-%S").csv"
	csvcut -d";" -c 3,2,4,5,6,8 $1 | \
		csvjson -L et_EE.utf8 --date-format "%d.%m.%Y" | \
		jq '.[]|select(."Row type"==20)' | \
		jq 'if ."Debit/Credit" == "D" then .Amount = (.Amount*-1) else .Amount = .Amount end|
		del(."Row type",."Debit/Credit")|
		.["Memo"] = .Details|
		.["Payee"] = ."Beneficiary/Payer"|
		del(.Details, ."Beneficiary/Payer")' | \
		jq -sc | \
		in2csv -f json > $OUTPUT/$filename && echo "saved in $OUTPUT/$filename" && rm -v $CSV
}

swedbankRead () {
	CSV=$1
	csvcut -d";" -c 1,3,2,4,5,6,8 $CSV | \
		csvjson -L et_EE.utf8 --date-format "%d.%m.%Y" | \
		jq '.[]|select(."Row type"==20)' | \
		jq 'if ."Debit/Credit" == "D" then .Amount = (((.Amount*-1)|tonumber)*1000) else .Amount = ((.Amount|tonumber)*1000) end | 
		.importId = (["YNAB",.Amount,.Date,"1"]|join(":")) | 
		.["Memo"] = .Details |
		.["Payee"] = ."Beneficiary/Payer" |
		.["IBAN"] = ."Client account" |
		del(."Row type",."Debit/Credit", ."Client account",.Details, ."Beneficiary/Payer")' | \
		jq -c --slurp 
}

lhvConvert () {
	IBAN=$( echo $CSV | grep -Po 'EE\d{18}' )
	prefix=$( getAccounts | jq '.[]|select(.name | contains("'$IBAN'"))|.name' -r|tr " " "_" )
	filename="${prefix}_$(date "+%Y-%m-%d_%H-%M-%S").csv"
	csvcut -d"," -c 3,5,9,12 $CSV | \
		csvformat -U 2 | \
		csvjson | \
		jq 'map(.Payee = ."Sender/receiver name" | 
			.Memo = .Description | 
			del(."Sender/receiver name", .Description))' | \
		in2csv -f json > $OUTPUT/$filename && echo "saved in $OUTPUT/$filename" && rm -v $CSV
}

lhvRead () {
	CSV=$1
	csvcut -d"," -c 1,3,5,9,12 $CSV | \
		csvjson | \
		jq 'map(
			.Amount = (( .Amount | tonumber)*1000) | 
				.importId = (["YNAB",.Amount,.Date,"1"]|join(":")) | 
				.IBAN = ."Customer account no" | 
				.Payee = ."Sender/receiver name" | 
				.Memo = .Description | 
				del(."Sender/receiver name", .Description, ."Customer account no"))' | jq . -c
}

importTransactions () {

		transactions=$(	for tr in $( echo $1 | jq -r '.[] | @base64')
		do
			_jq () {
				echo ${tr} | base64 --decode | jq ${1} -r
			}
		IBAN=$( _jq ".IBAN" )
		accountId=$( getAccountIdFromIBAN $IBAN )
		date=$( _jq ".Date" )
		amount=$( _jq ".Amount" )
		payee=$( _jq ".Payee" )
		importid=$( _jq ".importId" )
		echo '{"account_id":'$accountId',
		"date":"'$date'",
		"amount":'$amount',
		"payee_name":"'$payee'",
		"import_id":"'$importid'"}' | jq .
	done | jq -c --slurp )

	post_data () {
		(
		echo '{"transactions":'
		echo $transactions 
		echo '}'
		) | jq . -c
	}
	#post_data
	curl -X POST "https://api.youneedabudget.com/v1/budgets/$budgetId/transactions" -H  "accept: application/json" -H  "Authorization: Bearer $ynabToken" -H  "Content-Type: application/json" -d "$( post_data )"
}
